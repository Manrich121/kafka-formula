#!jinja|yaml
{% from  "kafka/defaults.yaml" import rawmap with context %}
{% set kafka = salt['grains.filter_by'](rawmap, grain='os', merge=salt['pillar.get']('kafka')) %}

{% set config = kafka.config %}
#  :NOTE: This file is managed  by Salt, any changes will not be saved
#
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# see kafka.server.KafkaConfig for additional details and defaults

############################# Server Basics #############################
# The id of the broker. This must be set to a unique integer for each broker.

{%- with kafka.config.zookeeper as zk %}
zookeeper.connect={{ zk.get('connect', ['localhost:2181'])|join(',') }}{{ zk.get('chroot', '') }}
# Timeout in ms for connecting to zookeeper
zookeeper.connection.timeout.ms={{ zk.get('connection.timeout.ms', 6000)}}
{%- endwith %}

{% if kafka.config.listeners is defined %}
listeners="{{ kafka.config.listeners|join(',') }}"
{% else %}
listeners=PLAINTEXT://:9092
{% endif %}

{%- for section, data in kafka.config.items() %}
{% if section not in ['zookeeper', 'listeners'] %}
{%- macro fmt(key, value) %}
{% if value|none %}
# {{ '%s.%s'|format(section, key) }} is set to default
{%- else %}
{{ '%s.%s'|format(section, key) }}={{ value}}
{% endif %}
{%- endmacro -%}

{%- if data|mapping %}
{% for k,v in data.items() %}
{{ fmt(k,v) }}
{% endfor %}
{% elif data|string or data|number %}
{{ section }}={{ data }}
{% elif data|none %}
{%- else  %}
# I wasnt sure what to do with {{ section }} => {{ data }}
{%- endif %}
{%- endfor %}
{%- endif %}

